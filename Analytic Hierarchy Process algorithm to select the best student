#include<bits/stdc++.h>
using namespace std;
double d[10][10],c[15][10],result[15][1];
double random_index(int n)
{   double RI;
    if (n==2)  (RI=0);
 else if (n==3){RI=(0.5247);}
 else if (n==4){RI=(0.8816);}
 else if (n==5){RI=(1.1086);}
 else if (n==6){RI=(1.2479);}
 else if (n==7){RI=(1.3417);}
 else if (n==8){RI=(1.4057);}
 else if (n==9){RI=(1.4499);}
 else if (n==10){RI=(1.4854);}
 else if (n==11){RI=(1.5140);}
 else if (n==12){RI=(1.5365);}
 else if (n==13){RI=(1.5551);}
 else if (n==14){RI=(1.5713);}
 else if (n==15){RI=(1.5838);}
  else {RI=((1.7699*n-4.3513)/(n-1.0));} // formula for 16+
return RI;
}
void multiply(int students,int n)
{
    int i,j,k;
    //initialize result matrix
    for(i=0;i<students;i++)
    {
        for(j=0;j<1;j++)
        {
            result[i][j]=0;
        }
    }
    //storing result in result matrix
    for(i=0;i<students;i++)
    {
        for(j=0;j<1;j++)
        {
            for(k=0;k<n;k++)
            {
                result[i][j]+=c[i][k]*d[k][j];
            }
        }
    }
    cout<<endl<<endl;
    cout<<"Priorities with respect to the goal are given below:"<<endl;
    //print result matrix
    for(i=0;i<students;i++)
    {
        for(j=0;j<1;j++)
        {
            cout<<result[i][j]<<endl;
        }
    }
}
void academic_achievements (int n)
{
    double a[10][10],b[10][10];
    int i,j;
    cout<<endl<<endl;


    //criteria inputs
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==j)
            {
                a[i][j]=1;
                b[i][j]=1;

                cout<<a[i][j]<<" ";
            }
            else if(j<i)
            {
                a[i][j]=1/(a[j][i]);
                b[i][j]=1/(b[j][i]);

                cout<<a[i][j]<<" ";
            }
            else
            {
                cin>>a[i][j];
                cout<<" ";
                b[i][j]=a[i][j];

            }
        }
        cout<<endl;
    }
    cout<<endl<<endl;
    //To display the matrix
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            cout<<a[i][j]<<"          ";
        }
        cout<<endl;
    }
    //sum of the column
    for(j=0;j<n;j++)
    {
        double sum=0;
        for(i=0;i<n;i++)
        {
            sum=sum+a[i][j];
        }
        a[n][j]=sum;

    }
    //divide column elements by the calculated column sum
     for(j=0;j<n;j++)
    {
        for(i=0;i<n;i++)
        {
            a[i][j]=a[i][j]/a[n][j];

        }
    }
    //criteria weights
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+a[i][j];
        }
        a[i][n]=sum/n;
        b[i][n]=a[i][n];
        c[i][3]=b[i][n];//priorities

    }


    //calculating consistency matrix
    //multiplying column importance values with criteria weights
     for (i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            b[j][i]=b[j][i]*a[i][n];

        }
    }
    //calculating weighted sum value
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+b[i][j];
        }
        b[i][n+1]=sum;

    }
    //calculating max lambda
    double lambda,sum;
    j=0;
    sum=0;
    for(i=0;i<n;i++)
    {
        j=(n+2);
            b[i][j]=((b[i][n+1])/(b[i][n]));

            sum=sum+b[i][j];
    }

    lambda=sum/n;
    double CI,CR,RI;
    RI=random_index(n);
    CI=(lambda-n)/(n-1);
    CR=CI/RI;
    if (CR<0.1)
    {
        cout<<"Priorities for the students with respect to Academic achievements:"<<endl;
        for(i=0;i<n;i++)
        {
            j=0;
            cout<<c[i][3]<<endl;
        }
    }
    else
    {
        cout<<"The academic achievement case is not consistent."<<endl;
        cout<<CR<<endl;
        cout<<"Enter Academic Achievement values again"<<endl;
        academic_achievements(n);
    }
}
void academic_test (int n)
{
    double a[10][10],b[10][10];
    int i,j;
    cout<<endl<<endl;


    //criteria inputs
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==j)
            {
                a[i][j]=1;
                b[i][j]=1;

                cout<<a[i][j]<<" ";
            }
            else if(j<i)
            {
                a[i][j]=1/(a[j][i]);
                b[i][j]=1/(b[j][i]);

                cout<<a[i][j]<<" ";
            }
            else
            {
                cin>>a[i][j];
                cout<<" ";
                b[i][j]=a[i][j];

            }
        }
        cout<<endl;
    }
    cout<<endl<<endl;
    //To display the matrix
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            cout<<a[i][j]<<"          ";
        }
        cout<<endl;
    }
    //sum of the column
    for(j=0;j<n;j++)
    {
        double sum=0;
        for(i=0;i<n;i++)
        {
            sum=sum+a[i][j];
        }
        a[n][j]=sum;

    }
    //divide column elements by the calculated column sum
     for(j=0;j<n;j++)
    {
        for(i=0;i<n;i++)
        {
            a[i][j]=a[i][j]/a[n][j];

        }
    }
    //criteria weights
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+a[i][j];
        }
        a[i][n]=sum/n;
        b[i][n]=a[i][n];
        c[i][1]=b[i][n];//priorities

    }


    //calculating consistency matrix
    //multiplying column importance values with criteria weights
     for (i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            b[j][i]=b[j][i]*a[i][n];

        }
    }
    //calculating weighted sum value
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+b[i][j];
        }
        b[i][n+1]=sum;

    }
    //calculating max lambda
    double lambda,sum;
    j=0;
    sum=0;
    for(i=0;i<n;i++)
    {
        j=(n+2);
            b[i][j]=((b[i][n+1])/(b[i][n]));

            sum=sum+b[i][j];
    }

    lambda=sum/n;
    double CI,CR,RI;
    RI=random_index(n);
    CI=(lambda-n)/(n-1);
    CR=CI/RI;
    if (CR<0.1)
    {
        cout<<"Priorities for the students with respect to academic tests:"<<endl;
        for(i=0;i<n;i++)
        {
            j=0;
            cout<<c[i][1]<<endl;
        }
    }
    else
    {
        cout<<"The academic tests case is not consistent."<<endl;
        cout<<CR<<endl;
        cout<<"Enter Academic Tests values again"<<endl;
        academic_test(n);
    }
}


void punctual (int n)
{
    double a[10][10],b[10][10];
    int i,j;
    cout<<endl<<endl;


    //criteria inputs
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==j)
            {
                a[i][j]=1;
                b[i][j]=1;

                cout<<a[i][j]<<" ";
            }
            else if(j<i)
            {
                a[i][j]=1/(a[j][i]);
                b[i][j]=1/(b[j][i]);

                cout<<a[i][j]<<" ";
            }
            else
            {
                cin>>a[i][j];
                cout<<" ";
                b[i][j]=a[i][j];

            }
        }
        cout<<endl;
    }
    cout<<endl<<endl;
    //To display the matrix
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            cout<<a[i][j]<<"          ";
        }
        cout<<endl;
    }
    //sum of the column
    for(j=0;j<n;j++)
    {
        double sum=0;
        for(i=0;i<n;i++)
        {
            sum=sum+a[i][j];
        }
        a[n][j]=sum;

    }
    //divide column elements by the calculated column sum
     for(j=0;j<n;j++)
    {
        for(i=0;i<n;i++)
        {
            a[i][j]=a[i][j]/a[n][j];

        }
    }
    //criteria weights
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+a[i][j];
        }
        a[i][n]=sum/n;
        b[i][n]=a[i][n];
        c[i][0]=b[i][n];//priorities

    }


    //calculating consistency matrix
    //multiplying column importance values with criteria weights
     for (i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            b[j][i]=b[j][i]*a[i][n];

        }
    }
    //calculating weighted sum value
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+b[i][j];
        }
        b[i][n+1]=sum;

    }
    //calculating max lambda
    double lambda,sum;
    j=0;
    sum=0;
    for(i=0;i<n;i++)
    {
        j=(n+2);
            b[i][j]=((b[i][n+1])/(b[i][n]));

            sum=sum+b[i][j];
    }

    lambda=sum/n;
    double CI,CR,RI;
    RI=random_index(n);
    CI=(lambda-n)/(n-1);
    CR=CI/RI;
    if (CR<0.1)
    {
        cout<<"Priorities for the students with respect to Punctuality:"<<endl;
        for(i=0;i<n;i++)
        {
            j=0;
            cout<<c[i][0]<<endl;
        }
    }
    else
    {
        cout<<"The punctuality case is not consistent."<<endl;
        cout<<CR<<endl;
        cout<<"Enter Punctuality values again"<<endl;
        punctual(n);
    }
}

void given_project (int n)
{
    double a[10][10],b[10][10];
    int i,j;
    cout<<endl<<endl;


    //criteria inputs
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==j)
            {
                a[i][j]=1;
                b[i][j]=1;

                cout<<a[i][j]<<" ";
            }
            else if(j<i)
            {
                a[i][j]=1/(a[j][i]);
                b[i][j]=1/(b[j][i]);

                cout<<a[i][j]<<" ";
            }
            else
            {
                cin>>a[i][j];
                cout<<" ";
                b[i][j]=a[i][j];

            }
        }
        cout<<endl;
    }
    cout<<endl<<endl;
    //To display the matrix
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            cout<<a[i][j]<<"          ";
        }
        cout<<endl;
    }
    //sum of the column
    for(j=0;j<n;j++)
    {
        double sum=0;
        for(i=0;i<n;i++)
        {
            sum=sum+a[i][j];
        }
        a[n][j]=sum;

    }
    //divide column elements by the calculated column sum
     for(j=0;j<n;j++)
    {
        for(i=0;i<n;i++)
        {
            a[i][j]=a[i][j]/a[n][j];

        }
    }
    //criteria weights
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+a[i][j];
        }
        a[i][n]=sum/n;
        b[i][n]=a[i][n];
        c[i][2]=b[i][n];//priorities

    }


    //calculating consistency matrix
    //multiplying column importance values with criteria weights
     for (i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            b[j][i]=b[j][i]*a[i][n];

        }
    }
    //calculating weighted sum value
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+b[i][j];
        }
        b[i][n+1]=sum;

    }
    //calculating max lambda
    double lambda,sum;
    j=0;
    sum=0;
    for(i=0;i<n;i++)
    {
        j=(n+2);
            b[i][j]=((b[i][n+1])/(b[i][n]));

            sum=sum+b[i][j];
    }

    lambda=sum/n;
    double CI,CR,RI;
RI=random_index(n);
    CI=(lambda-n)/(n-1);
    CR=CI/RI;
    if (CR<0.1)
    {
        cout<<"Priorities for the students with respect to Given project:"<<endl;
        for(i=0;i<n;i++)
        {
            j=0;
            cout<<c[i][2]<<endl;
        }
    }
    else
    {
        cout<<"The given project case is not consistent."<<endl;
        cout<<CR<<endl;
        cout<<"Enter Given project values again"<<endl;
        given_project(n);
    }
}

void task (int n)
{
    double a[10][10],b[10][10];
    int i,j;
    cout<<endl<<endl;


    //criteria inputs
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==j)
            {
                a[i][j]=1;
                b[i][j]=1;

                cout<<a[i][j]<<" ";
            }
            else if(j<i)
            {
                a[i][j]=1/(a[j][i]);
                b[i][j]=1/(b[j][i]);

                cout<<a[i][j]<<" ";
            }
            else
            {
                cin>>a[i][j];
                cout<<" ";
                b[i][j]=a[i][j];

            }
        }
        cout<<endl;
    }
    cout<<endl<<endl;
    //To display the matrix
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            cout<<a[i][j]<<"          ";
        }
        cout<<endl;
    }
    //sum of the column
    for(j=0;j<n;j++)
    {
        double sum=0;
        for(i=0;i<n;i++)
        {
            sum=sum+a[i][j];
        }
        a[n][j]=sum;

    }
    //divide column elements by the calculated column sum
     for(j=0;j<n;j++)
    {
        for(i=0;i<n;i++)
        {
            a[i][j]=a[i][j]/a[n][j];

        }
    }
    //criteria weights
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+a[i][j];
        }
        a[i][n]=sum/n;
        b[i][n]=a[i][n];
        c[i][4]=b[i][n];//priorities

    }


    //calculating consistency matrix
    //multiplying column importance values with criteria weights
     for (i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            b[j][i]=b[j][i]*a[i][n];

        }
    }
    //calculating weighted sum value
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+b[i][j];
        }
        b[i][n+1]=sum;

    }
    //calculating max lambda
    double lambda,sum;
    j=0;
    sum=0;
    for(i=0;i<n;i++)
    {
        j=(n+2);
            b[i][j]=((b[i][n+1])/(b[i][n]));

            sum=sum+b[i][j];
    }

    lambda=sum/n;
    double CI,CR,RI;
 RI=random_index(n);

    CI=(lambda-n)/(n-1);
    CR=CI/RI;
    if (CR<0.1)
    {
        cout<<"Priorities for the students with respect to given task:"<<endl;
        for(i=0;i<n;i++)
        {
            j=0;
            cout<<c[i][4]<<endl;
        }
    }
    else
    {
        cout<<"The task case is not consistent."<<endl;
        cout<<CR<<endl;
        cout<<"Enter Task values again"<<endl;
        task(n);
    }
}
void criteria_priorities(int n)
{
    double a[10][10],b[10][10];
    int i,j;
    cout<<endl<<endl<<endl;
    //criteria inputs
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==j)
            {
                a[i][j]=1;
                b[i][j]=1;

                cout<<a[i][j]<<" ";
            }
            else if(j<i)
            {
                a[i][j]=1/(a[j][i]);
                b[i][j]=1/(b[j][i]);

                cout<<a[i][j]<<" ";
            }
            else
            {
                cin>>a[i][j];
                b[i][j]=a[i][j];

            }
        }
    }
    //To display the matrix
    cout<<endl;
    cout<<"The matrix is:"<<endl;
    for(i=0;i<n;i++)
    { cout <<"Row "<< i << "=           ";
        for(j=0;j<n;j++)
        {
            cout<<a[i][j]<<"          ";
        }
        cout<<endl;
    }
    cout<<endl;
    //sum of the column
    for(j=0;j<n;j++)
    {
        double sum=0;
        for(i=0;i<n;i++)
        {
            sum=sum+a[i][j];
        }
        a[n][j]=sum;

    }
    //divide column elements by the calculated column sum
     for(j=0;j<n;j++)
    {
        for(i=0;i<n;i++)
        {
            a[i][j]=a[i][j]/a[n][j];

        }
    }
    //criteria weights
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+a[i][j];
        }
        a[i][n]=sum/n;
        b[i][n]=a[i][n];
        d[i][0]=a[i][n]; //priorities

    }
    //calculating consistency matrix
    //multiplying column importance values with criteria weights
     for (i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            b[j][i]=b[j][i]*a[i][n];

        }
    }
    //calculating weighted sum value
    for (i=0;i<n;i++)
    {
        double sum=0;
        for(j=0;j<n;j++)
        {
            sum=sum+b[i][j];
        }
        b[i][n+1]=sum;

    }
    //calculating max lambda
    double lambda,sum;
    j=0;
    sum=0;
    for(i=0;i<n;i++)
    {
        j=(n+2);
            b[i][j]=((b[i][n+1])/(b[i][n]));

            sum=sum+b[i][j];
    }

    lambda=sum/n;
    //cout<<lambda<<endl;
    double CI,CR,RI;
    RI=1.1086;

    CI=(lambda-n)/(n-1);
    CR=CI/RI;
    //cout<<CI<<endl<<CR<<endl;
    if(CR<0.1)
    {
        cout<<"Priorities of the criteria are given below:"<<endl;
        for(i=0;i<n;i++)
        {
            j=0;
            cout<<d[i][0]<<endl;
        }
    }
    else {
            cout<<"Inconsistent"<<endl;
            cout<<"Enter Criteria values again"<<endl;
            criteria_priorities(n);
        }
}
int main()
{
    cout<<"1=Equal importance"<<endl;
    cout<<"3=Moderate importance"<<endl;
    cout<<"5=Strong importance"<<endl;
    cout<<"7=Very strong importance"<<endl;
    cout<<"9=Extreme importance"<<endl;
    cout<<"2,4,6,8=Intermediate importance"<<endl;
    int n=5;
    int students;
    cout<<"Enter the number of students :"<<endl;
    cin>>students;
    punctual(students);
    given_project(students);
    task(students);
    academic_achievements(students);
    academic_test(students);
    criteria_priorities(n);
    multiply(students,n);
    int high=0;
    int i,j;
    for(i=1;i<students;i++)
    {
        for(j=0;j<1;j++)
        {
            if(result[i][j]>result[i-1][j])
            {
                high=i;
            }
        }
    }
    cout<<"The best student is "<<high+1<<". "<<endl;
    return 0;
}

